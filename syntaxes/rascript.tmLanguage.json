{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "RAScript",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#function"
        },
        {
            "include": "#control"
        },
        {
            "include": "#reserved"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#boolean"
        },
        {
            "include": "#parameters"
        },
        {
            "include": "#strings"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "begin": "/\\*",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.comment.block.rascript"
                        }
                    },
                    "end": "\\*/",
                    "name": "comment.block.rascript"
                },
                {
					"begin": "//",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.single.rascript"
						}
					},
					"end": "$",
                    "name": "comment.line.double-slash.rascript"
				}
            ]
        },
        "function": {
            "patterns": [{
                "name": "keyword.function.rascript",
                "match": "\\b(function)\\b"
            }]
        },
        "control": {
            "patterns": [{
                "name": "keyword.control.rascript",
                "match": "\\b(if|else|for|in|return)\\b"
            }]
        },
        "reserved": {
            "patterns": [{
                "name": "entity.name.function.rascript",
                "match": "\\b(byte|word|tbyte|dword|bit0|bit1|bit2|bit3|bit4|bit5|bit6|bit7|bit|low4|high4|bitcount|word_be|tbyte_be|dword_be|float|mbf32|mbf32_le|double32|double32_be|prev|prior|bcd|repeated|once|tally|never|unless|measured|trigger_when|disable_when|always_true|always_false|format|substring|length|range|array_map|array_contains|array_push|array_pop|dictionary_contains_key|any_of|all_of|none_of|sum_of|tally_of|assert|achievement|rich_presence_display|rich_presence_value|rich_presence_lookup|rich_presence_ascii_string_lookup|rich_presence_macro|rich_presence_conditional_display|leaderboard)\\b"
            }]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.decimal.rascript",
                    "match": "\\b[0-9]+\\b"
                },
                {
                    "name": "constant.numeric.hexadecimal.rascript",
                    "match": "(?i)\\$\\b\\h+\\b|\\b0x\\h+\\b"
                }
            ]
        },
        "boolean": {
            "patterns": [{
                "name": "constant.language.boolean.rascript",
                "match": "\\b(true|false)\\b"
            }]
        },
        "parameters": {
            "patterns": [{
                "name": "variable.parameter.rascript",
                "match": "\\b(transform|when|format|until|length|step|message|title|description|points|trigger|id|published|modified|badge|type|fallback|start|cancel|submit|value|lower_is_better|id)\\b",
                "settings": {
                    "foreground": "#FF0000"
                }
            }]
        },
        "strings": {
            "name": "string.quoted.double.rascript",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.rascript",
                    "match": "\\\\."
                }
            ]
        }
    },
    "scopeName": "source.rascript"
}